@using Microsoft.SemanticKernel.ChatCompletion
<div class="chat-container">
    <h3>Simulation</h3>
    <div class="chat-window">
        @foreach (var message in _messages)
        {
            if (message.Role == AuthorRole.User)
            {
                <div class="chat-message user-message">
                    @message.Content
                </div>
            }
            else if (message.Role == AuthorRole.Assistant)
            {
                <div class="chat-message ai-message">
                    @message.Content
                </div>
            }
        }
    </div>
    <EditForm Model="@UserMessageModel" OnValidSubmit="@HandleValidSubmitAsync" FormName="send_message_form" novalidate>
        <div class="chat-input-container">
            <DataAnnotationsValidator />
            <FluentTextField Name="message" @bind-Value="@UserMessageModel.Message" Autofocus="true" Immediate="true" Placeholder="Type your message here..." Style="flex-grow: 1;" Required/>
            <FluentButton Appearance="Appearance.Accent" Type="ButtonType.Submit" Style="margin-left: 10px;" IconStart="@(new Icons.Regular.Size16.Send())">Send</FluentButton>
            <FluentButton Appearance="Appearance.Accent" Type="ButtonType.Button" Style="margin-left: 10px;" IconStart="@(_micIcon)" OnClick="StartStopContinuousRecognitionAsync"></FluentButton>
        </div>
    </EditForm>
</div>
@code {

}

